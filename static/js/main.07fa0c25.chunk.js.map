{"version":3,"sources":["tokens/Alignment.ts","components/Column.tsx","tokens/Orientation.ts","tokens/Colors.ts","components/Layout.tsx","contexts/BuurtenContext.tsx","components/Row.tsx","components/Spacer.tsx","components/FormField.tsx","components/InputText.tsx","components/List.tsx","components/ListItem.tsx","components/PrimaryButton.tsx","components/SecundaryButton.tsx","components/Tag.tsx","components/TagForm.tsx","components/TextButton.tsx","pages/BuurtDetails.tsx","pages/BuurtenOverzicht.tsx","App.tsx","index.tsx"],"names":["MainAxisAlignment","CrossAxisAlignment","Orientation","Colors","Column","styled","div","stretch","mainAxisAlignment","crossAxisAlignment","css","Container","Layout","children","center","BUURTEN","name","tags","buurtenContext","React","createContext","undefined","useBuurten","context","useContext","Error","BuurtenProvider","useState","buurten","setBuurten","findBuurt","buurtName","find","buurt","toLowerCase","updateBuurt","newBuurt","newBuurten","reduce","useEffect","Provider","value","Row","reverse","Spacer","orientation","vertical","size","horizontal","ErrorMessage","label","primaryRed","Label","primaryBlack","FormField","errorMessage","htmlFor","Fragment","InputText","input","attrs","type","neutralGrey4","List","ul","ListItem","li","PrimaryButton","button","primaryWhite","darken","neutralGrey3","SecundaryButton","primaryDarkblue","StyledSpan","span","withRemoveIcon","Tag","restProps","tabIndex","icon","faTimes","TagForm","onSubmit","formState","setFormState","inputTagState","setInputTagState","onRemoveTagClick","event","removedTag","preventDefault","newTags","tag","newFormState","onAddTagClick","useCallback","push","handleSubmit","map","index","onClick","onKeyUp","code","onChange","target","Button","TextButton","iconLeft","iconRight","BuurtDetails","useParams","setBuurt","history","useHistory","onTextButtonClick","spaceBetween","baseline","faChevronLeft","BuurtenOverzicht","faChevronRight","length","App","basename","path","exact","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.07fa0c25.chunk.js","sourcesContent":["export enum MainAxisAlignment {\n  start = \"flex-start\",\n  center = \"center\",\n  end = \"flex-end\",\n  spaceBetween = \"space-between\",\n  spaceAround = \"space-around\",\n  spaceEvenly = \"space-evenly\",\n  stretch = \"stretch\",\n}\n\nexport enum CrossAxisAlignment {\n  start = \"flex-start\",\n  center = \"center\",\n  end = \"flex-end\",\n  stretch = \"stretch\",\n  baseline = \"baseline\",\n}\n","import styled, { css } from \"styled-components\";\n\nimport { CrossAxisAlignment, MainAxisAlignment } from \"../tokens/Alignment\";\n\ninterface ColumnProps extends React.HTMLAttributes<HTMLDivElement> {\n  stretch?: boolean;\n  mainAxisAlignment?: MainAxisAlignment;\n  crossAxisAlignment?: CrossAxisAlignment;\n}\n\nconst Column = styled.div<ColumnProps>(\n  ({ stretch, mainAxisAlignment, crossAxisAlignment }) => css`\n    display: flex;\n    flex-direction: column;\n    justify-content: ${mainAxisAlignment};\n    align-items: ${crossAxisAlignment};\n    max-width: 100%;\n    ${stretch &&\n    css`\n      flex-grow: 1;\n    `}\n  `\n);\n\nexport default Column;\n","export enum Orientation {\n  vertical = \"vertical\",\n  horizontal = \"horizontal\",\n}\n","enum Colors {\n  primaryBlack = \"rgb(0, 0, 0)\",\n  primaryDarkblue = \"rgb(0, 70, 153)\",\n  primaryRed = \"rgb(236, 0, 0)\",\n  primaryWhite = \"rgb(255, 255, 255)\",\n  neutralGrey1 = \"rgb(245, 245, 245)\",\n  neutralGrey2 = \"rgb(230, 230, 230)\",\n  neutralGrey3 = \"rgb(180, 180, 180)\",\n  neutralGrey4 = \"rgb(118, 118, 118)\",\n  neutralGrey5 = \"rgb(50, 50, 50)\",\n}\n\nexport default Colors;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport { CrossAxisAlignment } from \"../tokens/Alignment\";\nimport Column from \"./Column\";\n\nconst Layout: React.FC = ({ children }) => (\n  <Column crossAxisAlignment={CrossAxisAlignment.center}>\n    <Container>\n      <header>\n        <h1>Tag je buurt</h1>\n      </header>\n      <main>{children}</main>\n    </Container>\n  </Column>\n);\n\nconst Container = styled.div`\n  width: 50%;\n`;\n\nexport default Layout;\n","import React from \"react\";\n\nconst BUURTEN: Buurt[] = [\n  { name: \"Staatsliedenbuurt\", tags: [\"Hier woon ik\", \"Vlak bij Westerpark\"] },\n  { name: \"Rivierenbuurt\", tags: [\"Berlage\"] },\n  { name: \"Indische Buurt\", tags: [] },\n];\n\ninterface Buurt {\n  name: string;\n  tags: string[];\n}\n\ninterface BuurtenContextInterface {\n  buurten: Buurt[];\n  findBuurt: (buurtName: string) => Buurt | undefined;\n  updateBuurt: (buurt: Buurt) => void;\n}\n\nconst buurtenContext = React.createContext<BuurtenContextInterface | undefined>(\n  undefined\n);\n\nconst useBuurten = (): BuurtenContextInterface => {\n  const context = React.useContext(buurtenContext);\n\n  if (context === undefined) {\n    throw new Error(\"useBuurten must be used within a BuurtenProvider\");\n  }\n\n  return context;\n};\n\nconst BuurtenProvider: React.FC = ({ children }) => {\n  const [buurten, setBuurten] = React.useState<Buurt[]>([]);\n\n  const context = {\n    buurten,\n    findBuurt: (buurtName: string) =>\n      buurten.find(\n        (buurt) => buurt.name.toLowerCase() === buurtName.toLowerCase()\n      ),\n    updateBuurt: (newBuurt: Buurt) => {\n      const newBuurten = buurten.reduce<Buurt[]>(\n        (buurten: Buurt[], buurt: Buurt) =>\n          buurt.name === newBuurt.name\n            ? [...buurten, newBuurt]\n            : [...buurten, buurt],\n        []\n      );\n      setBuurten(newBuurten);\n    },\n  };\n\n  React.useEffect(() => {\n    setBuurten(BUURTEN);\n  }, []);\n\n  return (\n    <buurtenContext.Provider value={context}>\n      {children}\n    </buurtenContext.Provider>\n  );\n};\n\nexport { BuurtenProvider, useBuurten };\n\nexport type { Buurt };\n","import styled, { css } from \"styled-components\";\n\nimport { CrossAxisAlignment, MainAxisAlignment } from \"../tokens/Alignment\";\n\ninterface RowProps extends React.HTMLAttributes<HTMLDivElement> {\n  reverse?: boolean;\n  stretch?: boolean;\n  mainAxisAlignment?: MainAxisAlignment;\n  crossAxisAlignment?: CrossAxisAlignment;\n}\n\nconst Row = styled.div<RowProps>(\n  ({ reverse, stretch, mainAxisAlignment, crossAxisAlignment }) => css`\n    display: flex;\n    flex-direction: ${reverse ? \"row-reverse\" : \"row\"};\n    justify-content: ${mainAxisAlignment};\n    align-items: ${crossAxisAlignment};\n    max-height: 100%;\n    ${stretch &&\n    css`\n      flex-grow: 1;\n    `}\n  `\n);\n\nexport default Row;\n","import styled, { css } from \"styled-components\";\n\nimport { Orientation } from \"../tokens/Orientation\";\n\ninterface SpacerProps extends React.HTMLAttributes<HTMLDivElement> {\n  orientation?: Orientation;\n  size: number;\n}\n\nconst Spacer = styled.div<SpacerProps>(\n  ({ orientation = Orientation.vertical, size }) => {\n    if (orientation === Orientation.horizontal)\n      return css`\n        width: ${size}px;\n        display: inline-block;\n      `;\n    if (orientation === Orientation.vertical)\n      return css`\n        height: ${size}px;\n      `;\n  }\n);\n\nexport default Spacer;\n","import React from \"react\";\nimport styled from \"styled-components\";\n\nimport Colors from \"../tokens/Colors\";\nimport Spacer from \"./Spacer\";\n\ninterface FormFieldProps {\n  label: string;\n  name: string;\n  errorMessage?: string;\n}\n\nconst FormField: React.FC<FormFieldProps> = ({\n  label,\n  name,\n  errorMessage,\n  children,\n}) => (\n  <Container>\n    <Label htmlFor={name}>{label}</Label>\n    <Spacer size={10} />\n    {children}\n    {errorMessage && (\n      <React.Fragment>\n        <Spacer size={15} />\n        <ErrorMessage>{errorMessage}</ErrorMessage>\n      </React.Fragment>\n    )}\n  </Container>\n);\n\nconst Container = styled.div`\n  flex-grow: 1;\n`;\n\nconst ErrorMessage = styled.label`\n  font-size: 16px;\n  color: ${Colors.primaryRed};\n  letter-spacing: 0;\n  line-height: 22px;\n  font-weight: 700;\n  text-align: left;\n`;\n\nconst Label = styled.label`\n  font-size: 18px;\n  color: ${Colors.primaryBlack};\n  letter-spacing: 0;\n  line-height: 25px;\n  font-weight: 700;\n  text-align: left;\n`;\n\nexport default FormField;\n","import styled from \"styled-components\";\n\nimport Colors from \"../tokens/Colors\";\n\nconst InputText = styled.input.attrs(() => ({ type: \"text\" }))`\n  font-size: 16px;\n  color: ${Colors.primaryBlack};\n  letter-spacing: 0;\n  line-height: 22px;\n  font-weight: 400;\n  text-align: left;\n  padding: 10px 10px 12px 10px;\n  border: 1px solid ${Colors.neutralGrey4};\n  width: 100%;\n\n  &:hover,\n  :active {\n    border: 1px solid ${Colors.primaryBlack};\n  }\n`;\n\nexport default InputText;\n","import styled from \"styled-components\";\n\nconst List: React.FC = styled.ul`\n  list-style-type: none;\n  margin: 0;\n  padding: 0;\n`;\n\nexport default List;\n","import styled from \"styled-components\";\n\nconst ListItem: React.FC = styled.li`\n  margin: 10px 0;\n`;\n\nexport default ListItem;\n","import { darken } from \"polished\";\nimport styled, { css } from \"styled-components\";\n\nimport Colors from \"../tokens/Colors\";\n\nconst PrimaryButton = styled.button(\n  () => css`\n    background-color: ${Colors.primaryRed};\n    color: ${Colors.primaryWhite};\n    border: 0;\n    padding: 12px 15px;\n    font-size: 16px;\n    letter-spacing: 0px;\n    line-height: 22px;\n    font-weight: 700;\n    white-space: nowrap;\n    min-width: 90px;\n\n    &:hover,\n    :active {\n      background-color: ${darken(0.1, Colors.primaryRed)};\n      cursor: pointer;\n    }\n\n    &:disabled {\n      background-color: ${Colors.neutralGrey4};\n      color: ${Colors.neutralGrey3};\n    }\n  `\n);\n\nexport default PrimaryButton;\n","import styled, { css } from \"styled-components\";\n\nimport Colors from \"../tokens/Colors\";\n\nconst SecundaryButton = styled.button(\n  () => css`\n    background-color: ${Colors.primaryWhite};\n    color: ${Colors.primaryDarkblue};\n    border: 1px solid ${Colors.primaryDarkblue};\n    padding: 12px 15px;\n    font-size: 16px;\n    letter-spacing: 0px;\n    line-height: 22px;\n    font-weight: 700;\n    white-space: nowrap;\n\n    &:hover,\n    :active {\n      cursor: pointer;\n      border-width: 2px;\n      padding: 11px 14px;\n    }\n\n    &:disabled {\n      background-color: ${Colors.neutralGrey4};\n      color: ${Colors.neutralGrey3};\n      border: 0;\n    }\n  `\n);\n\nexport default SecundaryButton;\n","import { faTimes } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport styled, { css } from \"styled-components\";\n\nimport Colors from \"../tokens/Colors\";\nimport { Orientation } from \"../tokens/Orientation\";\nimport Spacer from \"./Spacer\";\n\ninterface TagProps extends React.HTMLAttributes<HTMLSpanElement> {\n  withRemoveIcon?: boolean;\n}\n\nconst Tag: React.FC<TagProps> = ({\n  withRemoveIcon = false,\n  children,\n  ...restProps\n}) => (\n  <StyledSpan\n    {...restProps}\n    withRemoveIcon={withRemoveIcon}\n    tabIndex={withRemoveIcon ? 0 : -1}\n  >\n    {withRemoveIcon && (\n      <React.Fragment>\n        <FontAwesomeIcon icon={faTimes} />\n        <Spacer orientation={Orientation.horizontal} size={10} />\n      </React.Fragment>\n    )}\n    {children}\n  </StyledSpan>\n);\n\nconst StyledSpan = styled.span<TagProps>(\n  ({ withRemoveIcon }) => css`\n    ${withRemoveIcon ? `cursor: pointer;` : `cursor: initial;`}\n    display: inline-block;\n    background-color: ${Colors.neutralGrey4};\n    color: ${Colors.primaryWhite};\n    padding: 7px 20px 7px 10px;\n    font-size: 16px;\n    letter-spacing: 0;\n    font-weight: 700;\n    text-align: left;\n  `\n);\n\nexport default Tag;\n","import React from \"react\";\n\nimport { Buurt } from \"../contexts/BuurtenContext\";\nimport { CrossAxisAlignment } from \"../tokens/Alignment\";\nimport { Orientation } from \"../tokens/Orientation\";\nimport FormField from \"./FormField\";\nimport InputText from \"./InputText\";\nimport List from \"./List\";\nimport ListItem from \"./ListItem\";\nimport PrimaryButton from \"./PrimaryButton\";\nimport Row from \"./Row\";\nimport SecundaryButton from \"./SecundaryButton\";\nimport Spacer from \"./Spacer\";\nimport Tag from \"./Tag\";\n\ninterface TagFormFields {\n  tags: string[];\n}\n\ninterface TagFormProps {\n  buurt: Buurt;\n  onSubmit: (formState: TagFormFields) => void;\n}\n\nconst TagForm: React.FC<TagFormProps> = ({ buurt, onSubmit }) => {\n  const [formState, setFormState] = React.useState<TagFormFields>({\n    tags: buurt.tags,\n  });\n  const [inputTagState, setInputTagState] = React.useState<string>(\"\");\n\n  const onRemoveTagClick = (\n    event:\n      | React.MouseEvent<HTMLSpanElement>\n      | React.KeyboardEvent<HTMLSpanElement>,\n    removedTag: string\n  ) => {\n    event.preventDefault();\n\n    const newTags = formState.tags.reduce<string[]>(\n      (tags: string[], tag: string) =>\n        tag === removedTag ? [...tags] : [...tags, tag],\n      []\n    );\n\n    const newFormState = { ...formState, tags: newTags };\n    setFormState(newFormState);\n  };\n\n  const onAddTagClick = React.useCallback(\n    (event: React.MouseEvent<HTMLButtonElement>) => {\n      event.preventDefault();\n\n      const newTags = [...formState.tags];\n      newTags.push(inputTagState);\n\n      const newFormState = { ...formState, tags: newTags };\n      setFormState(newFormState);\n      setInputTagState(\"\");\n    },\n    [formState, setFormState, inputTagState, setInputTagState]\n  );\n\n  const handleSubmit = React.useCallback(\n    (event: React.FormEvent<HTMLFormElement>) => {\n      event.preventDefault();\n      // validation could be added here\n\n      onSubmit(formState);\n    },\n    [formState, setFormState]\n  );\n\n  return (\n    <React.Fragment>\n      <List>\n        {formState.tags.map((tag, index) => (\n          <ListItem key={index}>\n            <Tag\n              withRemoveIcon={true}\n              onClick={(event: React.MouseEvent<HTMLSpanElement>) =>\n                onRemoveTagClick(event, tag)\n              }\n              onKeyUp={(event: React.KeyboardEvent<HTMLSpanElement>) => {\n                if (event.code === \"Enter\") {\n                  onRemoveTagClick(event, tag);\n                }\n              }}\n            >\n              {tag}\n            </Tag>\n          </ListItem>\n        ))}\n      </List>\n\n      <form onSubmit={handleSubmit}>\n        <FormField name=\"input-tag\" label=\"Voer hier je tag in\">\n          <Row crossAxisAlignment={CrossAxisAlignment.center}>\n            <InputText\n              value={inputTagState}\n              onChange={(event) => setInputTagState(event.target.value)}\n            />\n            <Spacer orientation={Orientation.horizontal} size={10} />\n            <SecundaryButton onClick={onAddTagClick}>\n              Voeg tag toe\n            </SecundaryButton>\n          </Row>\n        </FormField>\n        <Spacer orientation={Orientation.vertical} size={15} />\n        <PrimaryButton type=\"submit\" value=\"Submit\">\n          Sla op\n        </PrimaryButton>\n      </form>\n    </React.Fragment>\n  );\n};\n\nexport default TagForm;\n\nexport type { TagFormFields };\n","import { IconProp } from \"@fortawesome/fontawesome-svg-core\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React from \"react\";\nimport styled from \"styled-components\";\n\nimport Colors from \"../tokens/Colors\";\nimport { Orientation } from \"../tokens/Orientation\";\nimport Spacer from \"./Spacer\";\n\n// TODO: backgroundColor op een betere manier oplossen\n\ninterface TextButtonProps extends React.HTMLAttributes<HTMLButtonElement> {\n  iconLeft?: IconProp;\n  iconRight?: IconProp;\n}\n\nconst TextButton: React.FC<TextButtonProps> = ({\n  iconLeft,\n  iconRight,\n  children,\n  ...restProps\n}) => (\n  <Button {...restProps}>\n    {!!iconLeft && (\n      <React.Fragment>\n        <FontAwesomeIcon icon={iconLeft} />\n        <Spacer orientation={Orientation.horizontal} size={10} />\n      </React.Fragment>\n    )}\n    {children}\n    {!!iconRight && (\n      <React.Fragment>\n        <Spacer orientation={Orientation.horizontal} size={10} />\n        <FontAwesomeIcon icon={iconRight} />\n      </React.Fragment>\n    )}\n  </Button>\n);\n\nconst Button = styled.button`\n  cursor: pointer;\n  height: auto;\n  border: none;\n  background-color: ${Colors.primaryWhite};\n  padding: 0;\n  align-self: baseline;\n  white-space: normal;\n  text-align: left;\n  color: ${Colors.primaryDarkblue};\n  font-size: 16px;\n  letter-spacing: 0px;\n  line-height: 22px;\n  font-weight: 700;\n\n  &:hover {\n    color: ${Colors.primaryRed};\n  }\n`;\n\nexport default TextButton;\n","import { faChevronLeft } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { useHistory, useParams } from \"react-router-dom\";\n\nimport Column from \"../components/Column\";\nimport Row from \"../components/Row\";\nimport TagForm, { TagFormFields } from \"../components/TagForm\";\nimport TextButton from \"../components/TextButton\";\nimport { Buurt, useBuurten } from \"../contexts/BuurtenContext\";\nimport { CrossAxisAlignment, MainAxisAlignment } from \"../tokens/Alignment\";\n\nconst BuurtDetails: React.FC = () => {\n  const { buurtName } = useParams<{ buurtName: string }>();\n  const { findBuurt, updateBuurt } = useBuurten();\n  const [buurt, setBuurt] = React.useState<Buurt | undefined>();\n\n  const history = useHistory();\n\n  React.useEffect(() => {\n    const buurt = findBuurt(buurtName);\n    setBuurt(buurt);\n  }, [findBuurt]);\n\n  const onTextButtonClick = React.useCallback(\n    (event: React.MouseEvent) => {\n      event.preventDefault();\n      history.push(\"/\");\n    },\n    [history]\n  );\n\n  const onSubmit = React.useCallback(\n    (formState: TagFormFields) => {\n      if (buurt !== undefined) {\n        updateBuurt({ ...buurt, ...formState });\n        history.push(\"/\");\n      }\n    },\n    [buurt, updateBuurt, history]\n  );\n\n  if (buurt === undefined) {\n    return <p>Buurt met de naam {buurtName} bestaat niet</p>;\n  }\n  return (\n    <Column>\n      <Row\n        mainAxisAlignment={MainAxisAlignment.spaceBetween}\n        crossAxisAlignment={CrossAxisAlignment.baseline}\n      >\n        <h2>{buurt.name}</h2>\n        <TextButton onClick={onTextButtonClick} iconLeft={faChevronLeft}>\n          Terug\n        </TextButton>\n      </Row>\n      <TagForm buurt={buurt} onSubmit={onSubmit} />\n    </Column>\n  );\n};\n\nexport default BuurtDetails;\n","import { faChevronRight } from \"@fortawesome/free-solid-svg-icons\";\nimport React from \"react\";\nimport { useHistory } from \"react-router-dom\";\n\nimport List from \"../components/List\";\nimport ListItem from \"../components/ListItem\";\nimport Row from \"../components/Row\";\nimport Tag from \"../components/Tag\";\nimport TextButton from \"../components/TextButton\";\nimport { Buurt, useBuurten } from \"../contexts/BuurtenContext\";\nimport { CrossAxisAlignment, MainAxisAlignment } from \"../tokens/Alignment\";\n\nconst BuurtenOverzicht: React.FC = () => {\n  const history = useHistory();\n\n  const { buurten } = useBuurten();\n  const onClick = (event: React.MouseEvent, buurt: Buurt) => {\n    event.preventDefault();\n    history.push(`/${buurt.name.toLowerCase()}`);\n  };\n\n  return (\n    <React.Fragment>\n      <Row\n        mainAxisAlignment={MainAxisAlignment.spaceBetween}\n        crossAxisAlignment={CrossAxisAlignment.baseline}\n      >\n        <h2>Buurten overzicht</h2>\n      </Row>\n\n      <List>\n        {buurten.map((buurt, index) => (\n          <ListItem key={index}>\n            <TextButton\n              iconRight={faChevronRight}\n              onClick={(event) => onClick(event, buurt)}\n            >\n              {buurt.name}\n            </TextButton>\n            {!!buurt.tags.length && (\n              <List>\n                {buurt.tags.map((tag, index) => (\n                  <ListItem key={index}>\n                    <Tag key={index}>{tag}</Tag>\n                  </ListItem>\n                ))}\n              </List>\n            )}\n          </ListItem>\n        ))}\n      </List>\n    </React.Fragment>\n  );\n};\n\nexport default BuurtenOverzicht;\n","import React from \"react\";\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\n\nimport Layout from \"./components/Layout\";\nimport { BuurtenProvider } from \"./contexts/BuurtenContext\";\nimport BuurtDetails from \"./pages/BuurtDetails\";\nimport BuurtenOverzicht from \"./pages/BuurtenOverzicht\";\n\nconst App: React.FC = () => (\n  <BuurtenProvider>\n    <Layout>\n      <Router basename=\"/buurt-tagger\">\n        <Switch>\n          <Route path=\"/:buurtName\">\n            <BuurtDetails />\n          </Route>\n          <Route exact path=\"/\">\n            <BuurtenOverzicht />\n          </Route>\n        </Switch>\n      </Router>\n    </Layout>\n  </BuurtenProvider>\n);\n\nexport default App;\n","import \"./index.css\";\n\nimport React from \"react\";\nimport ReactDOM from \"react-dom\";\n\nimport App from \"./App\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}